version: '3.7'

services:
  resource_service_db:
    image: 'postgres:14-alpine3.14'
    container_name: 'resource_service_db'
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345678
      - POSTGRES_DB=mp3

  localstack:
    image: localstack/localstack:latest
    environment:
      - HOSTNAME_EXTERNAL=localstack
      - HOSTNAME=localstack
      - S3_PORT_EXTERNAL=4566
      - AWS_DEFAULT_REGION=us-east-1
    ports:
      - "4566:4566"


  zookeeper:
    image: elevy/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      cleanup.policy : compact
    depends_on:
      - zookeeper
    links:
      - zookeeper:zookeeper

  resource-service:
    image: 'resource_service'
    container_name: 'resource-service'
    build:
      dockerfile: Dockerfile
    ports:
      - '8081:8081'
    depends_on:
      - resource_service_db
      - localstack
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://resource_service_db:5432/mp3
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=12345678
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - aws.setup.region=us-east-1
      - aws.setup.accessKey=foo
      - aws.setup.secretKey=bar
      - aws.setup.endpoint=http://localstack:4566
      - S3_QUEUE=http://localstack:4566/000000000000/my-queue.fifo
      - spring_kafka_server=kafka:9092

  song_service_db:
      image: 'postgres:14-alpine3.14'
      container_name: 'song_service_db'
      restart: always
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=12345678
        - POSTGRES_DB=song

  song-service:
      image: 'song_service'
      container_name: 'song-service'
      build:
        dockerfile: SongDockerFile
      ports:
        - '8082:8082'
      depends_on:
        - song_service_db
      environment:
        - SPRING_DATASOURCE_URL=jdbc:postgresql://song_service_db:5432/song
        - SPRING_DATASOURCE_USERNAME=postgres
        - SPRING_DATASOURCE_PASSWORD=12345678
        - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  resource_processor:
    image: 'resource_processor.jar'
    container_name: 'resource_processor'
    depends_on:
      - kafka
      - song-service
      - resource-service
    build:
      dockerfile: ProcessorDockerFile
    ports:
      - '8083:8083'
    environment:
        spring.kafka.server: kafka:9092
        resource_service.url: http://resource-service:8081/v1/resources/
        song_service.url: http://song-service:8082/v1/songs
