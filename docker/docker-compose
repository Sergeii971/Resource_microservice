version: '3.7'

services:
  resource_service_db:
    image: 'postgres:14-alpine3.14'
    container_name: 'resource_service_db'
    restart: always
    env_file:
      - environment/resourceServiceDbEnvironment.env

  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"


  zookeeper:
    image: elevy/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    env_file:
      - environment/kafkaEnvironment.env
    depends_on:
      - zookeeper
    links:
      - zookeeper:zookeeper

  service-configuration:
    build:
      dockerfile: DockerServiceConfiguration
    image: service-configuration
    container_name: service-configuration
    ports:
      - "8888:8888"

  eureka-server:
    image: service_discovery.jar
    container_name: service_discovery
    build:
      context: .
      dockerfile: ServiceDiscovery
    ports:
      - "8761:8761"
    env_file:
      - environment/ServiceDiscovery.env

  spring-cloud-gateway-service:
    build:
      dockerfile: DockerSpringCloudGateway
    image: spring_cloud_gateway.jar
    container_name: spring_cloud_gateway
    ports:
        - "8084:8084"
    depends_on:
      - resource-service
      - song-service
      - eureka-server
      - storage-manager
    env_file:
      - environment/springCloudGateway.env

  storage-manager_db:
    image: 'postgres:14-alpine3.14'
    container_name: 'storage-manager_db'
    restart: always
    env_file:
      - environment/StorageManagerDbEnvironment.env

  storage-manager:
    image: 'storage-manager'
    container_name: 'storage-manager'
    build:
      dockerfile: StorageManager
    ports:
      - '8085:8085'
    depends_on:
      - storage-manager_db
      - eureka-server
    env_file:
      - environment/StorageManagerEnvironment.env

  resource-service:
    image: 'resource-service'
    container_name: 'resource-service'
    build:
      dockerfile: Dockerfile
    ports:
      - '8081:8081'
    depends_on:
      - resource_service_db
      - localstack
      - kafka
      - eureka-server
    env_file:
      - environment/resourceServiceEnvironment.env
    command: >
      "
      sleep 10;
      aws --endpoint-url http://localhost:4566 s3 mb s3://permanentbucket;
      aws --endpoint-url http://localhost:4566 s3 mb s3://stagingbucket
      "


  song_service_db:
      image: 'postgres:14-alpine3.14'
      container_name: 'song_service_db'
      restart: always
      env_file:
        - environment/songServiceDbEnvironment.env

  song-service:
      image: 'song-service'
      container_name: 'song-service'
      build:
        dockerfile: SongDockerFile
      ports:
        - '8082:8082'
      depends_on:
        - song_service_db
        - eureka-server
      env_file:
        - environment/songServiceEnvironment.env

  resource_processor:
    image: 'resource_processor.jar'
    container_name: 'resource_processor'
    depends_on:
      - kafka
      - song-service
      - resource-service
      - service-configuration
    build:
      dockerfile: ProcessorDockerFile
    ports:
      - '8083:8083'
    env_file:
      - environment/resourceProcessorEnvironment.env
